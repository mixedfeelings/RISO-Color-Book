/// <reference types="node" />
import { Transform, TransformOptions } from 'stream';
import type { ColorBook } from './types';
export interface AcbStreamDecoder extends Transform {
    on(event: 'book', callback: (book: ColorBook) => void): this;
    on(event: string | symbol, listener: (...args: any[]) => void): this;
    once(event: 'book', callback: (book: ColorBook) => void): this;
    once(event: string | symbol, listener: (...args: any[]) => void): this;
}
export declare class AcbStreamDecoder extends Transform implements AcbStreamDecoder {
    private book;
    private colorCount;
    constructor(options?: TransformOptions);
    private onSignature;
    private onVersion;
    private onId;
    private onTitle;
    private onColorNamePrefix;
    private onColorNamePostfix;
    private onDescription;
    private onColorCount;
    private onPageSize;
    private onPageMidPoint;
    private onColorModelId;
    private checkReadNextColor;
    private onSpotId;
    private readColor;
    private readComponents;
    private readAscii;
    private readUInt16BE;
    private readUInt32BE;
    private readString;
    private _bytes;
}
